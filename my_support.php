<?php/******************************************************************************* *   copyright				: (C) 2014 - 2018 Pro-Auction-Script *   site					: https://www.pro-auction-script.com *   Script License			: https://www.pro-auction-script.com/contents.php?show=free_license *******************************************************************************/include 'common.php';include PLUGIN_PATH . 'ckeditor/ckeditor.php';// If user is not logged in redirect to login pageif (!$user->checkAuth()){	$_SESSION['REDIRECT_AFTER_LOGIN'] = 'support';	header('location: user_login.php');	exit;}include PLUGIN_PATH . 'htmLawed/htmLawed.php';$conf = array();$conf = $system->SETTINGS['htmLawed_safe'];$conf = $system->SETTINGS['htmLawed_deny_attribute'];$ERROR = isset($_SESSION['err_message']) ? $_SESSION['err_message'] : '';$subject = isset($_POST['subject']) ? stripslashes($system->cleanvars($_POST['subject'])) : '';$nowmessage = isset($_POST['message']) ? htmLawed($_POST['message'], $conf) : '';$link = $system->SETTINGS['siteurl'] . 'support';if (isset($_POST['subject']) && isset($_POST['message'])){	//making sessions in case the ticket does not submit	$_SESSION['message'] = $_POST['message'];	$_SESSION['subject'] = $_POST['subject'];		//making the ticket id	$hash = $security->genRandString(48);		// submit the ticket to DB	$query = "INSERT INTO " . $DBPrefix . "support VALUES (NULL, :user, :title, :ticket_id, :status, :last_reply_user, :last_reply_time, :created_time, :ticket_reply_status)";	$params = array(		array(':user', $user->user_data['id'], 'int'),		array(':title', $subject, 'str'),		array(':ticket_id', $hash, 'str'),		array(':status', 'open', 'bool'),		array(':last_reply_user', $user->user_data['id'], 'int'),		array(':last_reply_time', $system->CTIME, 'int'),		array(':created_time', $system->CTIME, 'int'),		array(':ticket_reply_status', 'support', 'bool')	);	$db->query($query, $params);	if($db->lastInsertId() > 0)	{		// submit the message to DB and linking the ticket id		$query = "INSERT INTO " . $DBPrefix . "support_messages VALUES (NULL, 0, :sender_id, :from_email, :times, :nowmessages, :subjects, :replayof)";		$params = array(			array(':sender_id', $user->user_data['id'], 'int'),			array(':from_email', $user->user_data['email'], 'str'),			array(':times', $system->CTIME, 'int'),			array(':nowmessages', $nowmessage, 'str'),			array(':subjects', $subject, 'str'),			array(':replayof', $hash, 'str')		);		$db->query($query, $params);		if($db->lastInsertId() > 0)		{			// send the email			$ERROR = $send_email->submit_new_ticket($subject, $system->uncleanvars($nowmessage), $user->user_data['nick'], $user->user_data['email']);			//deteling the sessions			$_SESSION['message'] = '';			$_SESSION['subject'] = '';		}	}}if (isset($_POST['deleteid']) && is_array($_POST['deleteid'])){	foreach ($_POST['deleteid'] as $k => $v)	{		$query = "DELETE FROM " . $DBPrefix . "support_messages WHERE reply_of = :replayof";		$params = array(			array(':replayof', $v, 'int')		);		$db->query($query, $params);				$query = "DELETE FROM " . $DBPrefix . "support WHERE ticket_id = :replayof";		$params = array(			array(':replayof', $v, 'int')		);		$db->query($query, $params);	}	$ERROR = $MSG['444'];}if (isset($_POST['closeid']) && is_array($_POST['closeid'])){	foreach ($_POST['closeid'] as $k => $v)	{		$query = "UPDATE " . $DBPrefix . "support SET last_reply_time = :update_time, ticket_reply_status = :set_status, status = :set_close, last_reply_user = :set_user WHERE ticket_id = :id AND user = :user";		$params = array(			array(':update_time', $system->CTIME, 'int'),			array(':set_status', 'user', 'bool'),			array(':set_close', 'close', 'bool'),			array(':set_user', $user->user_data['id'], 'int'),			array(':user', $user->user_data['id'], 'int'),			array(':id', $v, 'int')		);		$db->query($query, $params);	}	$ERROR = $MSG['3500_1015439k'];}$CKEditor = new CKEditor();$CKEditor->basePath = $system->SETTINGS['siteurl'] . 'includes/plugins/ckeditor/';$CKEditor->returnOutput = true;$query = "SELECT t.*, u.nick FROM " . $DBPrefix . "support t	LEFT JOIN " . $DBPrefix . "users u ON (u.id = t.user)	WHERE t.user = :to_ids ORDER BY last_reply_time DESC";// get users messages$params = array();$params[] = array(':to_ids', $user->user_data['id'], 'int');$db->query($query, $params);$messages = $db->numrows();while ($array = $db->result()){	// formatting the created time	$created_time = $array['created_time'];	$mth = 'MON_0' . date('m', $created_time);	if($system->SETTINGS['datesformat'] == 'EUR')	{		$created =  date('j', $created_time) . ' ' . $MSG[$mth] . ' ' . date('Y', $created_time) . ' ' . date('H:i:s', $created_time);	}	else	{		$created = $MSG[$mth] . ' ' . date('j,Y', $created_time) . ' ' . date('H:i:s', $created_time);;	}		$last_reply_time = $array['last_reply_time'];	$mth = 'MON_0' . date('m', $last_reply_time);	if($system->SETTINGS['datesformat'] == 'EUR')	{		$last_reply =  date('j', $last_reply_time) . ' ' . $MSG[$mth] . ' ' . date('Y', $last_reply_time) . ' ' . date('H:i:s', $last_reply_time);	}	else	{		$last_reply = $MSG[$mth] . ' ' . date('j,Y', $last_reply_time) . ' ' . date('H:i:s', $last_reply_time);	}	$template->assign_block_vars('ticket', array(		'LAST_UPDATED_TIME' => $last_reply, //when the ticket was updated		'TICKET_ID' => $array['ticket_id'],		'LAST_UPDATE_USER' => $array['ticket_reply_status'] == 'user' ? $array['nick'] : $MSG['3500_1015436'],		'TICKET_TITLE' => ($array['ticket_reply_status'] == 'user' && $array['status'] == 'open') ? '<b>' . $array['title'] . '</b>' : $array['title'],		'CREATED' => $created, //time that the ticket was created		'TICKET_STATUS' => $array['status'] == 'open' ? true : false, //ticket is open or closed	));}$check_mess = (isset($_SESSION['message'])) ? $system->uncleanvars($_SESSION['message']) : '';$template->assign_vars(array(	'ERROR' => isset($ERROR) ? $ERROR : '',	'B_ISERROR' => isset($ERROR) ? true : false,	'MSGCOUNT' => $messages,	'SUBJECT' => (isset($_SESSION['subject'])) ? $_SESSION['subject'] : '',	'MESSAGE' => $CKEditor->editor('message', $check_mess),	//These are used in the bootstrap 3 theme	'ACTIVEACCOUNTTAB' => 'class="active"',	'ACTIVEMYSUPPORT' => 'class="active"',	'ACTIVEACCOUNTPANEL' => 'active'));unset($_SESSION['err_message']);include 'header.php';$template->set_filenames(array(		'body' => 'my_support.tpl'		));$template->display('body');include 'footer.php';