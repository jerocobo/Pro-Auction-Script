<?php/******************************************************************************* *   copyright				: (C) 2014 - 2018 Pro-Auction-Script *   site					: https://www.pro-auction-script.com *   Script License			: https://www.pro-auction-script.com/contents.php?show=free_license *******************************************************************************/include 'common.php';include PLUGIN_PATH . 'ckeditor/ckeditor.php';// If user is not logged in redirect to login pageif (!$user->checkAuth()){	$_SESSION['REDIRECT_AFTER_LOGIN'] = 'support';	header('location: user_login.php');	exit;}$messageid = $_GET['x'];if(isset($_POST['message']) && $_POST['reply'] == 'reply_back' && isset($messageid)){	$subject = isset($_POST['subject']) ? stripslashes($system->cleanvars($_POST['subject'])) : '';	$nowmessage = isset($_POST['message']) ? stripslashes($system->cleanvars($_POST['message'])) : '';	$_SESSION['reply_message'] = $subject;	$_SESSION['reply_subject'] = $nowmessage;	// submit the message to DB and linking the ticket id	$query = "INSERT INTO " . $DBPrefix . "support_messages VALUES (NULL, 0, :sender_id, :from_email, :times, :nowmessages, :subjects, :replayof)";	$params = array(		array(':sender_id', $user->user_data['id'], 'int'),		array(':from_email', $user->user_data['email'], 'str'),		array(':times', $system->CTIME, 'str'),		array(':nowmessages', $nowmessage, 'str'),		array(':subjects', $subject, 'str'),		array(':replayof', $messageid, 'str')	);	$db->query($query, $params);	if($db->lastInsertId() > 0)	{		$query = "UPDATE " . $DBPrefix . "support SET last_reply_time = :update_time, ticket_reply_status = :set_status, last_reply_user = :set_user WHERE ticket_id = :id AND user = :user";		$params = array(			array(':update_time', $system->CTIME, 'int'),			array(':set_status', 'support', 'bool'),			array(':set_user', $user->user_data['id'], 'int'),			array(':user', $user->user_data['id'], 'int'),			array(':id', $messageid, 'int')		);		$db->query($query, $params);		// send the email		$ERR = $send_email->reply_to_ticket($subject, $system->uncleanvars($nowmessage), $user->user_data['nick'], $system->SETTINGS['adminmail']);				//deteling the sessions		$_SESSION['reply_message'] = '';		$_SESSION['reply_subject'] = '';	}}$CKEditor = new CKEditor();$CKEditor->basePath = $system->SETTINGS['siteurl'] . 'includes/plugins/ckeditor/';$CKEditor->returnOutput = true;// check message is to user$query = "SELECT * FROM " . $DBPrefix . "support_messages WHERE reply_of = :ticket_id ORDER BY sentat DESC";$params = array(	array(':ticket_id', $messageid, 'str'));$db->query($query, $params);$messages = $db->numrows();if ($messages == 0){	$_SESSION['err_message'] = $MSG['3500_1015439m'];	header('location: ' . $system->SETTINGS['siteurl'] . 'support');}	while ($array = $db->result()){	$_SESSION['reply_subject'] = $array['subject'];	$sentat = $array['sentat'];	$mth = 'MON_0' . date('m', $sentat);	if($system->SETTINGS['datesformat'] == 'EUR')	{		$sent_time =  date('j', $sentat) . ' ' . $MSG[$mth] . ' ' . date('Y', $sentat) . ' ' . date('H:i:s', $sentat);	}	else	{		$sent_time = $MSG[$mth] . ' ' . date('j,Y', $sentat) . ' ' . date('H:i:s', $sentat);	}		$check_user = $array['sentfrom'] == 0 ? $MSG['3500_1015436'] :  $user->user_data['nick'];	$template->assign_block_vars('ticket_mess', array(		'LAST_UPDATED_TIME' => $sent_time, //when the ticket was updated		'TICKET_ID' => $array['reply_of'],		'LAST_USER' => $check_user,		'TICKET_MESSAGE' => $system->uncleanvars($array['message']),		'CREATED' => $sent_time, //time that the ticket was created	));}	$query = "SELECT t.*, u.nick FROM " . $DBPrefix . "support t	LEFT JOIN " . $DBPrefix . "users u ON (u.id = t.user)	WHERE t.ticket_id = :id";$params = array(	array(':id', $messageid, 'int'));$db->query($query, $params);if($db->numrows() > 0){	$array = $db->result();	// formatting the created time	$created_time = $array['created_time'];	$mth = 'MON_0' . date('m', $created_time);	if($system->SETTINGS['datesformat'] == 'EUR')	{		$created =  date('j', $created_time) . ' ' . $MSG[$mth] . ' ' . date('Y', $created_time) . ' ' . date('H:i:s', $created_time);	}	else	{		$created = $MSG[$mth] . ' ' . date('j,Y', $created_time) . ' ' . date('H:i:s', $created_time);;	}		$last_reply_time = $array['last_reply_time'];	$mth = 'MON_0' . date('m', $last_reply_time);	if($system->SETTINGS['datesformat'] == 'EUR')	{		$last_reply =  date('j', $last_reply_time) . ' ' . $MSG[$mth] . ' ' . date('Y', $last_reply_time) . ' ' . date('H:i:s', $last_reply_time);	}	else	{		$last_reply = $MSG[$mth] . ' ' . date('j,Y', $last_reply_time) . ' ' . date('H:i:s', $last_reply_time);	}		$template->assign_block_vars('ticket', array(		'LAST_UPDATED_TIME' => $last_reply, //when the ticket was updated		'TICKET_ID' => $array['ticket_id'],		'LAST_UPDATE_USER' => $array['ticket_reply_status'] == 'user' ? $array['nick'] : $MSG['3500_1015436'],		'TICKET_TITLE' => ($array['ticket_reply_status'] == 'user' && $array['status'] == 'open') ? '<b>' . $array['title'] . '</b>' : $array['title'],		'CREATED' => $created, //time that the ticket was created		'TICKET_STATUS' => $array['status'] == 'open' ? true : false, //ticket is open or closed	));}$check_mess = (isset($_SESSION['reply_message'])) ? $system->uncleanvars($_SESSION['reply_message']) : '';$template->assign_vars(array(	'ERROR' => isset($ERROR) ? $ERROR : '',	'B_ISERROR' => isset($ERROR) ? true : false,	'MSGCOUNT' => $messages,	'B_OPEN' => $array['status'] == 'open' ? true : false,	'ID' => $messageid,	'SUBJECT' => (isset($_SESSION['reply_subject'])) ? $_SESSION['reply_subject'] : '',	'MESSAGE' => $CKEditor->editor('message', $check_mess),	//These are used in the bootstrap 3 theme	'ACTIVEACCOUNTTAB' => 'class="active"',	'ACTIVEMYSUPPORT' => 'class="active"',	'ACTIVEACCOUNTPANEL' => 'active'));include 'header.php';$template->set_filenames(array(		'body' => 'your_support_messages.tpl'		));$template->display('body');include 'footer.php';