<?php /******************************************************************************* *   copyright				: (C) 2014 - 2018 Pro-Auction-Script *   site					: https://www.pro-auction-script.com *   Script License			: https://www.pro-auction-script.com/contents.php?show=free_license *******************************************************************************/include 'common.php';include INCLUDE_PATH . 'membertypes.inc.php'; $NOW = $system->CTIME;// set and clean our variables$listing_id     =  (isset($_POST['id'])) ? filter_var($_POST['id'], FILTER_SANITIZE_STRING) : (isset($_SESSION['REPORT_LISTING']['listing_id']) ? $_SESSION['REPORT_LISTING']['listing_id'] : '');$listing_title  =  (isset($_POST['title'])) ? filter_var($_POST['title'], FILTER_SANITIZE_STRING) : (isset($_SESSION['REPORT_LISTING']['listing_title']) ? $_SESSION['REPORT_LISTING']['listing_title'] : '');$listing_title = strtoupper($listing_title); $seller_id      =  (isset($_POST['seller_id'])) ? filter_var($_POST['seller_id'], FILTER_SANITIZE_STRING) : (isset($_SESSION['REPORT_LISTING']['seller_id']) ? $_SESSION['REPORT_LISTING']['seller_id'] : '');$seller_nick    =  (isset($_POST['seller_nick'])) ? filter_var($_POST['seller_nick'], FILTER_SANITIZE_STRING) : (isset($_SESSION['REPORT_LISTING']['seller_nick']) ? $_SESSION['REPORT_LISTING']['seller_nick'] : '');$pic_url        =  (isset($_POST['pic_url'])) ? filter_var($_POST['pic_url'], FILTER_SANITIZE_STRING) : (isset($_SESSION['REPORT_LISTING']['pic_url']) ? $_SESSION['REPORT_LISTING']['pic_url'] : '');if (!$user->checkAuth()) {       $_SESSION['REPORT_LISTING'] = array('listing_id' => $listing_id, 'listing_title' => $listing_title, 'seller_id' => $seller_id, 'seller_nick' => $seller_nick, 'pic_url' => $pic_url);    $_SESSION['REDIRECT_AFTER_LOGIN'] = 'report_listing.php?'; 	header('location: user_login.php');     exit; } $sender_nick    =  (isset($_POST['sender_nick'])) ? filter_var($_POST['sender_nick'], FILTER_SANITIZE_STRING) : '';//might not be needed$report_reason  =  (isset($_POST['report_reason'])) ? filter_var($_POST['report_reason'], FILTER_SANITIZE_STRING) : '';$sender_comment =  (isset($_POST['sender_comment'])) ? filter_var($_POST['sender_comment'], FILTER_SANITIZE_STRING) : '';$reporter_id    =  $user->user_data['id'];$reporter_nick  =  $user->user_data['nick'];$report_comment =  $sender_comment;$report_date    =  $NOW;$report_closed  =  0;$TPL_error_text = '';$emailsent = 1;// check recaptcha is enabled$spam_html = '';if ($system->SETTINGS['spam_register'] == 2){	include PLUGIN_PATH . 'captcha/recaptchalib.php';	if(!$_POST["g-recaptcha-response"])	{		$capcha_text = '<script src="https://www.google.com/recaptcha/api.js"></script> <div class="g-recaptcha" data-sitekey="' . $system->SETTINGS['recaptcha_public'] . '"></div>';	}	elseif(isset($_POST["g-recaptcha-response"]))	{		$resp = recaptcha_check_answer($system->SETTINGS['recaptcha_private'], $_SERVER["REMOTE_ADDR"], $_POST["g-recaptcha-response"]);	}}elseif ($system->SETTINGS['spam_register'] == 1){	include PLUGIN_PATH . 'captcha/securimage.php';		$resp = new Securimage();	$spam_html = $resp->show_html();}// prevent seller repoting himselfif ($user->user_data['nick'] == $seller_nick) {   $TPL_error_text = 'You are the Seller of this Auction. You can not report your Auctions.';}if (isset($_POST['action']) && $_POST['action'] == 'sendmail'){	// check errors	if (empty($_POST['report_reason']) || $_POST['report_reason'] == 'Please Select A Reporting Reason')	{		$TPL_error_text = 'Subject is not complete. Please Choose the Reason you are Reporting this Auction from the Subject dropdown list.';	}	elseif (empty($user->user_data['nick']) || empty($user->user_data['email']))	{		$TPL_error_text = 'There has been a problem with the email, please contact us if the problem continues';	}   	elseif ($system->SETTINGS['spam_sendtofriend'] == 2 && !$resp)	{		$TPL_error_text = $MSG['752'];	}	elseif ($system->SETTINGS['spam_sendtofriend'] == 1 && !$resp->check($_POST['captcha_code']))	{		$TPL_error_text = $MSG['752'];	}	if (!empty($TPL_error_text))	{		$emailsent = 1;	}	else	{   		    //Get seller's email		$query = "SELECT email FROM " . $DBPrefix . "users WHERE id = :user_id";        $params = array(			array(':user_id', intval($seller_id), 'int')		);		$db->query($query, $params);        $seller_email = $db->result('email');			    // good to go?, call emailers and prepare email variables 		 $pic_url2 = (!empty($pic_url)) ? ''.$system->SETTINGS['siteurl'] . $pic_url : 'images/email_alerts/default_item_img.jpg';                $thumbimage='<img src="'.$pic_url2.'">';		//  prepare email content		$subject = 'Auction ID:'. $listing_id .' has been reported under: ' .$report_reason;//used for the private message to seller.				$sentfrom = $system->SETTINGS['adminmail'];//this not needed if normal mail used		$nowmessage = 'Your Auction: ' . $listing_title .' - Auction ID: ' . $listing_id  . '<br /> has been reported as ' . $report_reason;        $nowmessage = nl2br($nowmessage);		$nowmessagetoadmin = 'Auction: ' . $listing_title .' - Auction ID: ' . $listing_id  . '<br /> has been reported as ' . $report_reason;		$nowmessagetoadmin = nl2br($nowmessagetoadmin);						$emailsent = 0;		$emailer_admin = new email_handler();;		$emailer_seller = new email_handler();;				$admin_comment = 'Your Auction: ' . $listing_title .' - Auction ID: ' . $listing_id  . '<br /> has been reported as ' . $report_reason . '<br>Please look into it.';		$admin_comment_if_suspended = 'Your Auction has been Suspended!';		$add_in_sender_comment_to_admin = 'This Auction has been Suspended Pending Review !';				$emailer_admin->assign_vars(array(				'S_NAME' => $user->user_data['nick'],				'S_EMAIL' => $user->user_data['email'],				'S_COMMENT' => stripslashes($sender_comment),				'F_NAME' =>  $seller_nick,				'TITLE' => $listing_title,				'URL' => $system->SETTINGS['siteurl'] . 'item.php?id=' . $listing_id,				'SITENAME' => $system->SETTINGS['sitename'],				'SITEURL' => $system->SETTINGS['siteurl'],				'SITE_URL' => $system->SETTINGS['siteurl'],				'ADMINEMAIL' => $system->SETTINGS['adminmail'],				'SUBJECT' => stripslashes($nowmessagetoadmin),				'A_PICURL'=> $thumbimage,				));		$emailer_seller->assign_vars(array(				'S_NAME' => 'ADMIN',				'S_EMAIL' => $system->SETTINGS['adminmail'],				'S_COMMENT' => stripslashes($admin_comment),				'F_NAME' =>  $seller_nick,				'TITLE' => $listing_title,				'URL' => $system->SETTINGS['siteurl'] . 'item.php?id=' . $listing_id,				'SITENAME' => $system->SETTINGS['sitename'],				'SITEURL' => $system->SETTINGS['siteurl'],				'SITE_URL' => $system->SETTINGS['siteurl'],				'ADMINEMAIL' => $system->SETTINGS['adminmail'],				'SUBJECT' => stripslashes($nowmessage),				'A_PICURL'=> $thumbimage,				));								        		// insert values in table report_listings in database start		$query = "INSERT INTO " . $DBPrefix . "report_listing VALUES		(NULL, :reporter_id, :reporter_nick, :reporter_reason, :reporter_comment, :reporter_date, :listing_id, :listing_title, :seller_id, :seller_nick, :report_closed)"; 		$params = array(			array(':reporter_id', intval($reporter_id), 'int'),			array(':reporter_nick', $system->cleanvars($reporter_nick), 'str'),			array(':reporter_reason', $system->cleanvars($report_reason), 'str'),			array(':reporter_comment', $system->cleanvars($report_comment), 'str'),			array(':reporter_date', $report_date, 'int'),			array(':listing_id', $listing_id, 'int'),			array(':listing_title', $listing_title, 'str'),			array(':seller_id', $seller_id, 'int'),			array(':seller_nick', $seller_nick, 'str'),			array(':report_closed', $report_closed, 'str')		);		$db->query($query, $params);		// insert values in table report_listings in database end	    if (!isset($_POST['id']) || empty($_POST['id'])){  //do nothing or error or exit;}else if ($_POST['id'] > 0){	$query = "SELECT report_class FROM " . $DBPrefix . "report_reasons WHERE report_reason = :report_reasons";	$params = array(		array(':report_reasons', $report_reason, 'str')	);	$db->query($query, $params);	$reported_data = $db->result();    if ($reported_data['report_class'] == 1 || $reported_data['report_class'] == 2 || $reported_data['report_class'] == 3)    {  	if ($reported_data['report_class'] == 1)	{        /*  This can be deleted when you get normal emails up and running		//send basic emails start		to admin		$emailer->email_basic($subject, $sentfrom, $nowmessagetoadmin, $sentfrom);		to seller (the reporting user at the moment for testing)		$emailer->email_basic($subject, $seller_email, $nowmessage, $sentfrom);	    send basic emails end*/						// send normal emails start		//to admin		$emailer_admin->email_sender($system->SETTINGS['adminmail'], 'report_listing_admin.inc.php', 'Reported Listing Auct.ID: ' . $listing_id .'');				//to seller				 $emailer_seller->email_sender($seller_email, 'report_listing_seller.inc.php', 'Reported Listing');		    // send normal emails end		    }    if ($reported_data['report_class'] == 2)    {  $id = intval($_POST['id']); 		suspend_reported_auction($id);        /*  This can be deleted when you get normal emails up and running		//send basic emails start		to admin		$emailer->email_basic($subject, $sentfrom, $nowmessagetoadmin, $sentfrom);		to seller (the reporting user at the moment for testing)		$emailer->email_basic($subject, $seller_email, $nowmessage, $sentfrom);	    send basic emails end*/				//Just adding a line to email when auction suspended		$emailer_admin->vars['S_COMMENT'] = $sender_comment . '<br><b>' .$add_in_sender_comment_to_admin .'</b>';		$emailer_seller->vars['S_COMMENT'] = $admin_comment . '<br><b>' .$add_in_sender_comment_to_admin .'</b>';						// send normal emails start		//to admin		$emailer_admin->email_sender($system->SETTINGS['adminmail'], 'report_listing_admin.inc.php', 'Reported Listing Auct.ID: ' . $listing_id .'');				//to seller				 $emailer_seller->email_sender($seller_email, 'report_listing_seller.inc.php', 'Reported Listing');		    // send normal emails end    }        if ($reported_data['report_class'] == 3)	{        /*  This can be deleted when you get normal emails up and running		//send basic emails start		to admin		$emailer->email_basic($subject, $sentfrom, $nowmessagetoadmin, $sentfrom);		to seller (the reporting user at the moment for testing)		$emailer->email_basic($subject, $seller_email, $nowmessage, $sentfrom);	    send basic emails end*/						// send normal emails start		//to admin		$emailer_admin->email_sender($system->SETTINGS['adminmail'], 'report_listing_admin.inc.php', 'Reported Listing Auct.ID: ' . $listing_id .'');				//to seller				 //$emailer_seller->email_sender($seller_email, 'report_listing_seller.inc.php', 'Reported Listing');		    // send normal emails end		     }		// Insert new message in the database for seller to see when logging in	$email = true;	$to_id = ($email) ? $seller_id : '';	$query = "INSERT INTO " . $DBPrefix . "messages (sentto, sentfrom, sentat, message, subject)			VALUES ('" . $to_id . "', '0', " . $system->CTIME . ", '" . $nowmessage . "', '" . $subject . "')";	$db->direct_query($query);		}   } }}if ($system->SETTINGS['spam_sendtofriend'] == 2){	$capcha_text = recaptcha_get_html($system->SETTINGS['recaptcha_public']);}elseif ($system->SETTINGS['spam_sendtofriend'] == 1){	$capcha_text = $spam_html;}$report_reason = $report_reason;$TPL_report_reasons_list = '';$TPL_report_reasons_list .= '<select name="report_reason" class="form-control">' . "\n"; $TPL_report_reasons_list .= "\t" . '<option>' . $MSG['3500_1015940'] . '</option>' ."\n";$query = "SELECT report_reason FROM " . $DBPrefix . "report_reasons"; $db->direct_query($query);while ($row = $db->result()) { 	$TPL_report_reasons_list .= "\t" . '<option value="' . $row['report_reason'] . '" ' . (($row['report_reason'] == $report_reason) ? 'selected="true"' : '') . '>' . $row['report_reason'] . '</option>' . "\n"; } $TPL_report_reasons_list .= '</select>' . "\n";  if($user->checkUserValid($seller_id)) {print_r('is valid user');}	$template->assign_vars(array(		'ERROR' => $TPL_error_text,		'CAPTCHATYPE' => $system->SETTINGS['spam_register'],		'CAPCHA' => ($system->SETTINGS['spam_register'] == 2) ? $capcha_text : $spam_html,		'REPORT_REASONS_LIST' => $TPL_report_reasons_list,		'SENDER_NICK' => $user->user_data['nick'],		'COMMENT' => stripslashes($sender_comment),		'EMAILSENT' => $emailsent,		'TITLE' => stripslashes($listing_title),		'SEO_TITLE' => generate_seo_link($listing_title),		'ID' => $listing_id,		'SELLER_ID' => $seller_id,		'SELLER_NICK' => $seller_nick,		'PIC_URL' => (!empty($pic_url)) ? 'getthumb.php?w=80&fromfile=' . UPLOAD_FOLDER . $listing_id . '/' . $pic_url : 'images/email_alerts/default_item_img.jpg',		'PIC_URL1' => $pic_url,		'SENDER_EMAIL' => $user->user_data['email'],			));include 'header.php';$template->set_filenames(array(		'body' => 'report_listing.tpl'		));$template->display('body');include 'footer.php';unset ($_SESSION['REPORT_LISTING']);function suspend_reported_auction($id) {  global $system, $DBPrefix, $db;$catscontrol = new MPTTcategories();		// get auction data	$query = "SELECT category, closed, suspended FROM " . $DBPrefix . "auctions WHERE id = :auc_id";	$params = array(		array(':auc_id', $id, 'int')	);	$db->query($query, $params);	$auc_data = $db->result();	if ($auc_data['suspended'] > 0)	{		//do nothing	}	else	{		// suspend auction		$query = "UPDATE " . $DBPrefix . "auctions SET suspended = :suspended WHERE id = :auc_id";		$params = array(			array(':suspended', 1, 'int'),			array(':auc_id', $id, 'int')		);		$db->query($query, $params);		if ($auc_data['closed'] == 1)		{			$system->writesetting("counters", "suspendedauctions", $system->COUNTERS['suspendedauctions'] + 1, 'int');			$system->writesetting("counters", "closedauctions", $system->COUNTERS['closedauctions'] - 1, 'int');		}		else		{			$system->writesetting("counters", "suspendedauctions", $system->COUNTERS['suspendedauctions'] + 1, 'int');			$system->writesetting("counters", "auctions", $system->COUNTERS['auctions'] - 1, 'int');			// update recursive categories			$query = "SELECT left_id, right_id, level FROM " . $DBPrefix . "categories WHERE cat_id = :category";			$params = array(				array(':category', $auc_data['category'], 'int')			);			$db->query($query, $params);			$parent_node = $db->result();			$crumbs = $catscontrol->get_bread_crumbs($parent_node['left_id'], $parent_node['right_id']);			for ($i = 0; $i < count($crumbs); $i++)			{				$query = "UPDATE " . $DBPrefix . "categories SET sub_counter = sub_counter - :counter WHERE cat_id = :category_id";				$params = array(					array(':counter', 1, 'int'),					array(':category_id', $crumbs[$i]['cat_id'], 'int')				);				$db->query($query, $params);			}		}	}}